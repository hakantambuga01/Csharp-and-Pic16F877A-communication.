CCS PCM C Compiler, Version 5.007, 61971               18-Eki-18 02:10

               Filename:   C:\Users\HAKAN TAMBUÐA\Desktop\ASA_16F877A_CH340_C#Haberlesme\ASA_KOD7_16F877A_CH340_C#Haberlesme\ASA_KOD7_16F877A_CH340_C#Haberlesme.lst

               ROM used:   621 words (8%)
                           Largest free fragment is 2048
               RAM used:   25 (7%) at main() level
                           27 (7%) worst case
               Stack used: 1 locations (0 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  01
0001:  MOVWF  0A
0002:  GOTO   1D3
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  MOVLW  8C
0018:  MOVWF  04
0019:  BTFSS  00.5
001A:  GOTO   01D
001B:  BTFSC  0C.5
001C:  GOTO   02E
001D:  MOVF   22,W
001E:  MOVWF  04
001F:  MOVF   23,W
0020:  MOVWF  77
0021:  MOVF   24,W
0022:  MOVWF  78
0023:  MOVF   25,W
0024:  MOVWF  79
0025:  MOVF   26,W
0026:  MOVWF  7A
0027:  MOVF   20,W
0028:  MOVWF  0A
0029:  SWAPF  21,W
002A:  MOVWF  03
002B:  SWAPF  7F,F
002C:  SWAPF  7F,W
002D:  RETFIE
002E:  BCF    0A.3
002F:  BCF    0A.4
0030:  GOTO   05E
.................... #include <16F877A.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
0031:  BCF    0A.0
0032:  BCF    0A.1
0033:  BCF    0A.2
0034:  ADDWF  02,F
0035:  RETLW  01
0036:  RETLW  03
0037:  RETLW  02
0038:  RETLW  06
0039:  RETLW  04
003A:  RETLW  0C
003B:  RETLW  08
003C:  RETLW  09
003D:  BCF    0A.0
003E:  BCF    0A.1
003F:  BCF    0A.2
0040:  ADDWF  02,F
0041:  RETLW  09
0042:  RETLW  08
0043:  RETLW  0C
0044:  RETLW  04
0045:  RETLW  06
0046:  RETLW  02
0047:  RETLW  03
0048:  RETLW  01
....................  
.................... #list 
....................  
.................... #device ADC=10 
.................... #fuses XT,NOWDT,NOPROTECT,NOBROWNOUT,NOLVP,NOPUT,NOWRT,NODEBUG,NOCPD 
....................  
.................... #use delay(crystal=4000000) 
0049:  MOVLW  35
004A:  MOVWF  04
004B:  BCF    03.7
004C:  MOVF   00,W
004D:  BTFSC  03.2
004E:  GOTO   05D
004F:  MOVLW  01
0050:  MOVWF  78
0051:  CLRF   77
0052:  DECFSZ 77,F
0053:  GOTO   052
0054:  DECFSZ 78,F
0055:  GOTO   051
0056:  MOVLW  4A
0057:  MOVWF  77
0058:  DECFSZ 77,F
0059:  GOTO   058
005A:  GOTO   05B
005B:  DECFSZ 00,F
005C:  GOTO   04F
005D:  RETURN
.................... #use rs232(baud=9600,xmit=PIN_C6,rcv=PIN_C7,bits=8,parity=N, stop=1) 
....................  
.................... char gelenVeri; 
.................... int16 k; 
.................... int sag,sol; 
.................... int stepMotor_hizi=6; 
.................... int i,m; 
.................... const int yarim_adim[]={0x01,0x03,0x02,0x06,0x04,0x0C,0x08,0x09}; // Step motor yarým adým dönüþ adýmlarý 
.................... const int ters_yarim_adim[]={0x09,0x08,0x0C,0x04,0x06,0x02,0x03,0x01}; 
....................  
.................... int stepSag=0,stepSol=0; 
.................... #int_rda 
.................... void serihaberlesme_kesmesi() 
.................... { 
....................    disable_interrupts(int_rda); 
005E:  BSF    03.5
005F:  BCF    0C.5
....................    gelenVeri = getchar(); 
0060:  BCF    03.5
0061:  BTFSS  0C.5
0062:  GOTO   061
0063:  MOVF   1A,W
0064:  MOVWF  28
....................    /////////////////////////////////////////////////////// 
....................    /////////////////////////////////////////////////////// 
....................    /////////////////////////////////////////////////////// 
....................    /////////////////////////////////////////////////////// 
....................    /////////////////////////////////////////////////////// 
....................    /////////////////////////////////////////////////////// 
....................    /////////////////////////////////////////////////////// 
....................    /////////////////////////////////////////////////////// 
....................    /////////////////////////////////////////////////////// 
....................    //////////////////DC MOTOR KONTROLÜ//////////////////// 
....................    if(gelenVeri == 'D') //sag dön 
0065:  MOVF   28,W
0066:  SUBLW  44
0067:  BTFSS  03.2
0068:  GOTO   08A
....................       {  
....................          k=0; 
0069:  CLRF   2A
006A:  CLRF   29
....................          sag=1; 
006B:  MOVLW  01
006C:  MOVWF  2B
....................          sol=0; 
006D:  CLRF   2C
....................          output_low(pin_c0); 
006E:  BCF    32.0
006F:  MOVF   32,W
0070:  BSF    03.5
0071:  MOVWF  07
0072:  BCF    03.5
0073:  BCF    07.0
....................          set_pwm2_duty(k); 
0074:  MOVF   2A,W
0075:  MOVWF  79
0076:  MOVF   29,W
0077:  MOVWF  78
0078:  RRF    79,F
0079:  RRF    78,F
007A:  RRF    79,F
007B:  RRF    78,F
007C:  RRF    79,F
007D:  MOVF   78,W
007E:  MOVWF  1B
007F:  RRF    79,F
0080:  RRF    79,W
0081:  ANDLW  30
0082:  MOVWF  77
0083:  MOVF   1D,W
0084:  ANDLW  CF
0085:  IORWF  77,W
0086:  MOVWF  1D
....................          delay_ms(100); 
0087:  MOVLW  64
0088:  MOVWF  35
0089:  CALL   049
....................       } 
....................     if(gelenVeri == 'A')//sola dön 
008A:  MOVF   28,W
008B:  SUBLW  41
008C:  BTFSS  03.2
008D:  GOTO   0B0
....................       { 
....................          k=250; 
008E:  CLRF   2A
008F:  MOVLW  FA
0090:  MOVWF  29
....................          sol=1; 
0091:  MOVLW  01
0092:  MOVWF  2C
....................          sag=0; 
0093:  CLRF   2B
....................          output_high(pin_c0); 
0094:  BCF    32.0
0095:  MOVF   32,W
0096:  BSF    03.5
0097:  MOVWF  07
0098:  BCF    03.5
0099:  BSF    07.0
....................          set_pwm2_duty(k); 
009A:  MOVF   2A,W
009B:  MOVWF  79
009C:  MOVF   29,W
009D:  MOVWF  78
009E:  RRF    79,F
009F:  RRF    78,F
00A0:  RRF    79,F
00A1:  RRF    78,F
00A2:  RRF    79,F
00A3:  MOVF   78,W
00A4:  MOVWF  1B
00A5:  RRF    79,F
00A6:  RRF    79,W
00A7:  ANDLW  30
00A8:  MOVWF  77
00A9:  MOVF   1D,W
00AA:  ANDLW  CF
00AB:  IORWF  77,W
00AC:  MOVWF  1D
....................          delay_ms(100); 
00AD:  MOVLW  64
00AE:  MOVWF  35
00AF:  CALL   049
....................       } 
....................       if(sag==1) 
00B0:  DECFSZ 2B,W
00B1:  GOTO   104
....................       { 
....................       if(gelenVeri == 'W')// pwm arttýr 
00B2:  MOVF   28,W
00B3:  SUBLW  57
00B4:  BTFSS  03.2
00B5:  GOTO   0DA
....................       {  
....................          k=k+10;              
00B6:  MOVLW  0A
00B7:  ADDWF  29,F
00B8:  BTFSC  03.0
00B9:  INCF   2A,F
....................          if(k>=240)k=240; 
00BA:  MOVF   2A,F
00BB:  BTFSS  03.2
00BC:  GOTO   0C1
00BD:  MOVF   29,W
00BE:  SUBLW  EF
00BF:  BTFSC  03.0
00C0:  GOTO   0C4
00C1:  CLRF   2A
00C2:  MOVLW  F0
00C3:  MOVWF  29
....................          set_pwm2_duty(k); 
00C4:  MOVF   2A,W
00C5:  MOVWF  79
00C6:  MOVF   29,W
00C7:  MOVWF  78
00C8:  RRF    79,F
00C9:  RRF    78,F
00CA:  RRF    79,F
00CB:  RRF    78,F
00CC:  RRF    79,F
00CD:  MOVF   78,W
00CE:  MOVWF  1B
00CF:  RRF    79,F
00D0:  RRF    79,W
00D1:  ANDLW  30
00D2:  MOVWF  77
00D3:  MOVF   1D,W
00D4:  ANDLW  CF
00D5:  IORWF  77,W
00D6:  MOVWF  1D
....................          delay_ms(100); 
00D7:  MOVLW  64
00D8:  MOVWF  35
00D9:  CALL   049
....................       } 
....................       if(gelenVeri == 'S')//pwm azalt 
00DA:  MOVF   28,W
00DB:  SUBLW  53
00DC:  BTFSS  03.2
00DD:  GOTO   104
....................       {  
....................          k=k-10;    
00DE:  MOVLW  0A
00DF:  SUBWF  29,F
00E0:  MOVLW  00
00E1:  BTFSS  03.0
00E2:  MOVLW  01
00E3:  SUBWF  2A,F
....................          if(k<=10)k=10; 
00E4:  MOVF   2A,F
00E5:  BTFSS  03.2
00E6:  GOTO   0EE
00E7:  MOVF   29,W
00E8:  SUBLW  0A
00E9:  BTFSS  03.0
00EA:  GOTO   0EE
00EB:  CLRF   2A
00EC:  MOVLW  0A
00ED:  MOVWF  29
....................          set_pwm2_duty(k);       
00EE:  MOVF   2A,W
00EF:  MOVWF  79
00F0:  MOVF   29,W
00F1:  MOVWF  78
00F2:  RRF    79,F
00F3:  RRF    78,F
00F4:  RRF    79,F
00F5:  RRF    78,F
00F6:  RRF    79,F
00F7:  MOVF   78,W
00F8:  MOVWF  1B
00F9:  RRF    79,F
00FA:  RRF    79,W
00FB:  ANDLW  30
00FC:  MOVWF  77
00FD:  MOVF   1D,W
00FE:  ANDLW  CF
00FF:  IORWF  77,W
0100:  MOVWF  1D
....................          delay_ms(100); 
0101:  MOVLW  64
0102:  MOVWF  35
0103:  CALL   049
....................       } 
....................       } 
....................       if(sol==1) 
0104:  DECFSZ 2C,W
0105:  GOTO   158
....................       { 
....................       if(gelenVeri == 'S')// pwm arttýr 
0106:  MOVF   28,W
0107:  SUBLW  53
0108:  BTFSS  03.2
0109:  GOTO   12E
....................       {  
....................          k=k+10;              
010A:  MOVLW  0A
010B:  ADDWF  29,F
010C:  BTFSC  03.0
010D:  INCF   2A,F
....................          if(k>=240)k=240; 
010E:  MOVF   2A,F
010F:  BTFSS  03.2
0110:  GOTO   115
0111:  MOVF   29,W
0112:  SUBLW  EF
0113:  BTFSC  03.0
0114:  GOTO   118
0115:  CLRF   2A
0116:  MOVLW  F0
0117:  MOVWF  29
....................          set_pwm2_duty(k); 
0118:  MOVF   2A,W
0119:  MOVWF  79
011A:  MOVF   29,W
011B:  MOVWF  78
011C:  RRF    79,F
011D:  RRF    78,F
011E:  RRF    79,F
011F:  RRF    78,F
0120:  RRF    79,F
0121:  MOVF   78,W
0122:  MOVWF  1B
0123:  RRF    79,F
0124:  RRF    79,W
0125:  ANDLW  30
0126:  MOVWF  77
0127:  MOVF   1D,W
0128:  ANDLW  CF
0129:  IORWF  77,W
012A:  MOVWF  1D
....................          delay_ms(100); 
012B:  MOVLW  64
012C:  MOVWF  35
012D:  CALL   049
....................       } 
....................       if(gelenVeri == 'W')//pwm azalt 
012E:  MOVF   28,W
012F:  SUBLW  57
0130:  BTFSS  03.2
0131:  GOTO   158
....................       {  
....................          k=k-10;    
0132:  MOVLW  0A
0133:  SUBWF  29,F
0134:  MOVLW  00
0135:  BTFSS  03.0
0136:  MOVLW  01
0137:  SUBWF  2A,F
....................          if(k<=10)k=10; 
0138:  MOVF   2A,F
0139:  BTFSS  03.2
013A:  GOTO   142
013B:  MOVF   29,W
013C:  SUBLW  0A
013D:  BTFSS  03.0
013E:  GOTO   142
013F:  CLRF   2A
0140:  MOVLW  0A
0141:  MOVWF  29
....................          set_pwm2_duty(k);       
0142:  MOVF   2A,W
0143:  MOVWF  79
0144:  MOVF   29,W
0145:  MOVWF  78
0146:  RRF    79,F
0147:  RRF    78,F
0148:  RRF    79,F
0149:  RRF    78,F
014A:  RRF    79,F
014B:  MOVF   78,W
014C:  MOVWF  1B
014D:  RRF    79,F
014E:  RRF    79,W
014F:  ANDLW  30
0150:  MOVWF  77
0151:  MOVF   1D,W
0152:  ANDLW  CF
0153:  IORWF  77,W
0154:  MOVWF  1D
....................          delay_ms(100); 
0155:  MOVLW  64
0156:  MOVWF  35
0157:  CALL   049
....................       } 
....................       } 
....................       if(gelenVeri == 'Z')//motorlarý durdur 
0158:  MOVF   28,W
0159:  SUBLW  5A
015A:  BTFSS  03.2
015B:  GOTO   17C
....................       {  
....................          k=0;          
015C:  CLRF   2A
015D:  CLRF   29
....................          output_low(pin_c0); 
015E:  BCF    32.0
015F:  MOVF   32,W
0160:  BSF    03.5
0161:  MOVWF  07
0162:  BCF    03.5
0163:  BCF    07.0
....................          set_pwm2_duty(k); 
0164:  MOVF   2A,W
0165:  MOVWF  79
0166:  MOVF   29,W
0167:  MOVWF  78
0168:  RRF    79,F
0169:  RRF    78,F
016A:  RRF    79,F
016B:  RRF    78,F
016C:  RRF    79,F
016D:  MOVF   78,W
016E:  MOVWF  1B
016F:  RRF    79,F
0170:  RRF    79,W
0171:  ANDLW  30
0172:  MOVWF  77
0173:  MOVF   1D,W
0174:  ANDLW  CF
0175:  IORWF  77,W
0176:  MOVWF  1D
....................          sag=0; 
0177:  CLRF   2B
....................          sol=0; 
0178:  CLRF   2C
....................          delay_ms(100); 
0179:  MOVLW  64
017A:  MOVWF  35
017B:  CALL   049
....................       } 
....................    /////////////////////////////////////////////////////// 
....................    /////////////////////////////////////////////////////// 
....................    /////////////////////////////////////////////////////// 
....................    /////////////////////////////////////////////////////// 
....................    /////////////////////////////////////////////////////// 
....................    /////////////////////////////////////////////////////// 
....................    //////////////////STEP MOTOR KONTROLÜ////////////////// 
....................    if(gelenVeri == 'H')  
017C:  MOVF   28,W
017D:  SUBLW  48
017E:  BTFSS  03.2
017F:  GOTO   192
....................    {output_b(0x00);  delay_ms(300); stepSag=1; stepSol=0; output_b(0x00); }//sag dön 
0180:  BSF    03.5
0181:  CLRF   06
0182:  BCF    03.5
0183:  CLRF   06
0184:  MOVLW  02
0185:  MOVWF  34
0186:  MOVLW  96
0187:  MOVWF  35
0188:  CALL   049
0189:  DECFSZ 34,F
018A:  GOTO   186
018B:  MOVLW  01
018C:  MOVWF  30
018D:  CLRF   31
018E:  BSF    03.5
018F:  CLRF   06
0190:  BCF    03.5
0191:  CLRF   06
....................     
....................    if(gelenVeri == 'F') 
0192:  MOVF   28,W
0193:  SUBLW  46
0194:  BTFSS  03.2
0195:  GOTO   1A8
....................    {output_b(0x00);  delay_ms(300); stepSol=1; stepSag=0; output_b(0x00); }//sol dön 
0196:  BSF    03.5
0197:  CLRF   06
0198:  BCF    03.5
0199:  CLRF   06
019A:  MOVLW  02
019B:  MOVWF  34
019C:  MOVLW  96
019D:  MOVWF  35
019E:  CALL   049
019F:  DECFSZ 34,F
01A0:  GOTO   19C
01A1:  MOVLW  01
01A2:  MOVWF  31
01A3:  CLRF   30
01A4:  BSF    03.5
01A5:  CLRF   06
01A6:  BCF    03.5
01A7:  CLRF   06
....................     
....................    if(gelenVeri == 'T') 
01A8:  MOVF   28,W
01A9:  SUBLW  54
01AA:  BTFSS  03.2
01AB:  GOTO   1B7
....................    {stepMotor_hizi=stepMotor_hizi-1; if(stepMotor_hizi<=1)stepMotor_hizi=1; delay_ms(10); }//hýzlan 
01AC:  MOVLW  01
01AD:  SUBWF  2D,F
01AE:  MOVF   2D,W
01AF:  SUBLW  01
01B0:  BTFSS  03.0
01B1:  GOTO   1B4
01B2:  MOVLW  01
01B3:  MOVWF  2D
01B4:  MOVLW  0A
01B5:  MOVWF  35
01B6:  CALL   049
....................     
....................    if(gelenVeri == 'G') 
01B7:  MOVF   28,W
01B8:  SUBLW  47
01B9:  BTFSS  03.2
01BA:  GOTO   1C6
....................    {stepMotor_hizi=stepMotor_hizi+1; if(stepMotor_hizi>=5)stepMotor_hizi=5; delay_ms(10); }//yavaþla 
01BB:  MOVLW  01
01BC:  ADDWF  2D,F
01BD:  MOVF   2D,W
01BE:  SUBLW  04
01BF:  BTFSC  03.0
01C0:  GOTO   1C3
01C1:  MOVLW  05
01C2:  MOVWF  2D
01C3:  MOVLW  0A
01C4:  MOVWF  35
01C5:  CALL   049
....................     
....................       if(gelenVeri == 'X')  // Motor dur 
01C6:  MOVF   28,W
01C7:  SUBLW  58
01C8:  BTFSS  03.2
01C9:  GOTO   1CF
....................    { 
....................       stepSag=0; 
01CA:  CLRF   30
....................       stepSol=0; 
01CB:  CLRF   31
....................        
....................      delay_ms(200); 
01CC:  MOVLW  C8
01CD:  MOVWF  35
01CE:  CALL   049
....................    } 
....................     
....................  
....................  
....................     
....................        
01CF:  BCF    0C.5
01D0:  BCF    0A.3
01D1:  BCF    0A.4
01D2:  GOTO   01D
.................... } 
....................  
....................  
....................  
....................    /////////////////////////////////////////////////////// 
....................    /////////////////////////////////////////////////////// 
....................    /////////////////////////////////////////////////////// 
....................    /////////////////////////////////////////////////////// 
....................    /////////////////////////////////////////////////////// 
....................    /////////////////////////////////////////////////////// 
....................    /////////////////////////////////////////////////////// 
....................    /////////////////////////////////////////////////////// 
.................... void main() 
01D3:  MOVLW  19
01D4:  BSF    03.5
01D5:  MOVWF  19
01D6:  MOVLW  A6
01D7:  MOVWF  18
01D8:  MOVLW  90
01D9:  BCF    03.5
01DA:  MOVWF  18
01DB:  MOVLW  06
01DC:  MOVWF  2D
01DD:  CLRF   30
01DE:  CLRF   31
01DF:  MOVLW  FF
01E0:  MOVWF  32
01E1:  BSF    03.5
01E2:  BSF    1F.0
01E3:  BSF    1F.1
01E4:  BSF    1F.2
01E5:  BCF    1F.3
01E6:  MOVLW  07
01E7:  MOVWF  1C
01E8:  BCF    03.7
01E9:  MOVLW  1F
01EA:  ANDWF  03,F
.................... { 
....................    setup_psp(PSP_DISABLED);        // PSP birimi devre dýþý 
01EB:  BCF    09.4
....................    setup_spi(SPI_SS_DISABLED);     // SPI birimi devre dýþý 
01EC:  BCF    03.5
01ED:  BCF    14.5
01EE:  BCF    32.5
01EF:  MOVF   32,W
01F0:  BSF    03.5
01F1:  MOVWF  07
01F2:  BCF    03.5
01F3:  BSF    32.4
01F4:  MOVF   32,W
01F5:  BSF    03.5
01F6:  MOVWF  07
01F7:  BCF    03.5
01F8:  BCF    32.3
01F9:  MOVF   32,W
01FA:  BSF    03.5
01FB:  MOVWF  07
01FC:  MOVLW  01
01FD:  BCF    03.5
01FE:  MOVWF  14
01FF:  MOVLW  00
0200:  BSF    03.5
0201:  MOVWF  14
....................    setup_timer_1(T1_DISABLED);     // T1 zamanlayýcýsý devre dýþý 
0202:  BCF    03.5
0203:  CLRF   10
....................    Setup_timer_2(T2_DIV_BY_16,253,1); ; // T2 zamanlayýcýsý devre dýþý 
0204:  MOVWF  78
0205:  IORLW  06
0206:  MOVWF  12
0207:  MOVLW  FD
0208:  BSF    03.5
0209:  MOVWF  12
....................    setup_adc_ports(NO_ANALOGS);    // ANALOG giriþ yok 
020A:  BSF    1F.0
020B:  BSF    1F.1
020C:  BSF    1F.2
020D:  BCF    1F.3
....................    setup_adc(ADC_OFF);             // ADC birimi devre dýþý 
020E:  BCF    03.5
020F:  BCF    1F.0
....................    setup_CCP1(CCP_OFF);            // CCP1 birimi devre dýþý 
0210:  MOVLW  F0
0211:  ANDWF  17,F
....................    setup_CCP2(CCP_PWM);  
0212:  BCF    32.1
0213:  MOVF   32,W
0214:  BSF    03.5
0215:  MOVWF  07
0216:  BCF    03.5
0217:  BCF    07.1
0218:  MOVLW  0C
0219:  MOVWF  1D
....................     
.................... //!   output_b(0x00);   
....................    output_low(pin_c0); 
021A:  BCF    32.0
021B:  MOVF   32,W
021C:  BSF    03.5
021D:  MOVWF  07
021E:  BCF    03.5
021F:  BCF    07.0
....................    set_pwm2_duty(0); 
0220:  CLRF   1B
0221:  CLRF   27
0222:  BTFSC  0B.7
0223:  BSF    27.7
0224:  BCF    0B.7
....................    delay_ms(100); 
0225:  MOVLW  64
0226:  MOVWF  35
0227:  CALL   049
0228:  BTFSC  27.7
0229:  BSF    0B.7
....................     
....................    enable_interrupts(GLOBAL); 
022A:  MOVLW  C0
022B:  IORWF  0B,F
....................    while(TRUE) 
....................    { 
....................       enable_interrupts(int_rda); 
022C:  BSF    03.5
022D:  BSF    0C.5
....................        
....................        
....................        
....................     if(stepSag == 1) 
022E:  BCF    03.5
022F:  DECFSZ 30,W
0230:  GOTO   24D
....................    { 
....................       i=0; 
0231:  CLRF   2E
....................       for(i=0; i<8; i++) 
0232:  CLRF   2E
0233:  MOVF   2E,W
0234:  SUBLW  07
0235:  BTFSS  03.0
0236:  GOTO   24D
....................         { 
....................          output_b(yarim_adim[i]);  // Step motor yarým adým ileri 
0237:  MOVF   2E,W
0238:  CALL   031
0239:  MOVWF  33
023A:  BSF    03.5
023B:  CLRF   06
023C:  BCF    03.5
023D:  MOVF   33,W
023E:  MOVWF  06
023F:  CLRF   27
0240:  BTFSC  0B.7
0241:  BSF    27.7
0242:  BCF    0B.7
....................          delay_ms(stepMotor_hizi); 
0243:  MOVF   2D,W
0244:  MOVWF  35
0245:  CALL   049
0246:  BTFSC  27.7
0247:  BSF    0B.7
....................          enable_interrupts(int_rda); 
0248:  BSF    03.5
0249:  BSF    0C.5
024A:  BCF    03.5
024B:  INCF   2E,F
024C:  GOTO   233
....................        
....................         } 
....................    } 
....................  
....................     
....................    if(stepSol == 1) 
024D:  DECFSZ 31,W
024E:  GOTO   26B
....................    { 
....................       m=0; 
024F:  CLRF   2F
....................       for(m=0; m<8; m++) 
0250:  CLRF   2F
0251:  MOVF   2F,W
0252:  SUBLW  07
0253:  BTFSS  03.0
0254:  GOTO   26B
....................         { 
....................          output_b(ters_yarim_adim[m]);  // Step motor yarým adým ileri 
0255:  MOVF   2F,W
0256:  CALL   03D
0257:  MOVWF  33
0258:  BSF    03.5
0259:  CLRF   06
025A:  BCF    03.5
025B:  MOVF   33,W
025C:  MOVWF  06
025D:  CLRF   27
025E:  BTFSC  0B.7
025F:  BSF    27.7
0260:  BCF    0B.7
....................          delay_ms(stepMotor_hizi); 
0261:  MOVF   2D,W
0262:  MOVWF  35
0263:  CALL   049
0264:  BTFSC  27.7
0265:  BSF    0B.7
....................          enable_interrupts(int_rda); 
0266:  BSF    03.5
0267:  BSF    0C.5
0268:  BCF    03.5
0269:  INCF   2F,F
026A:  GOTO   251
....................        
....................         } 
....................     
....................    } 
026B:  GOTO   22C
....................  
....................    }} 
....................  
026C:  SLEEP
....................  

Configuration Fuses:
   Word  1: 3F39   XT NOWDT NOPUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
